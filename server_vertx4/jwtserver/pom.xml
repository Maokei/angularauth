<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>se.maokei</groupId>
  <artifactId>jwtserver</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>

    <vertx.version>4.3.3</vertx.version>
    <junit-jupiter.version>5.7.0</junit-jupiter.version>
    <micrometer.version>4.2.6</micrometer.version>

    <main.verticle>se.maokei.jwtserver.MainVerticle</main.verticle>
    <launcher.class>io.vertx.core.Launcher</launcher.class>

    <graal.version>21.3.0</graal.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-config</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-auth-jwt</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-hazelcast</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-json-schema</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-mongo-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web-graphql</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.22</version>
      <scope>provided</scope>
    </dependency>
    <!--dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-micrometer-metrics</artifactId>
      <version>4.2.6</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <version>${micrometer.version}</version>
    </dependency-->


    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <release>11</release>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>${launcher.class}</Main-Class>
                    <Main-Verticle>${main.verticle}</Main-Verticle>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
              <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <configuration>
          <mainClass>io.vertx.core.Launcher</mainClass>
          <arguments>
            <argument>run</argument>
            <argument>${main.verticle}</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
  <profile>
    <id>native</id>
    <build>
      <plugins>
        <plugin>
          <groupId>org.graalvm.buildtools</groupId>
          <artifactId>native-maven-plugin</artifactId>
          <version>0.9.7.1</version>
          <executions>
            <execution>
              <id>test-native</id>
              <goals>
                <goal>test</goal>
              </goals>
              <phase>test</phase>
            </execution>
            <execution>
              <id>build-native</id>
              <goals>
                <goal>build</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
          <configuration>
            <imageName>jwtserver</imageName>
            <!--mainClass>se.maokei.jwtserver.MainVerticle</mainClass-->
            <mainClass>io.vertx.core.Launcher</mainClass>
            <buildArgs>
              -H:+PrintClassInitialization
              -H:+ReportExceptionStackTraces
              --report-unsupported-elements-at-runtime
              --no-fallback
              --allow-incomplete-classpath
              --enable-http
              --enable-https
              --enable-all-security-services
              --trace-class-initialization=io.netty.buffer.UnpooledUnsafeHeapByteBuf
              --trace-class-initialization=jdk.xml.internal.SecuritySupport
              --initialize-at-build-time=org.slf4j.MDC
              --initialize-at-build-time=org.slf4j.LoggerFactory
              --initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder
              --initialize-at-build-time=org.apache.log4j.helpers.Loader
              --initialize-at-build-time=org.apache.log4j.Logger
              --initialize-at-build-time=org.apache.log4j.helpers.LogLog
              --initialize-at-build-time=org.apache.log4j.LogManager
              --initialize-at-build-time=org.apache.log4j.spi.LoggingEvent
              --initialize-at-build-time=org.slf4j.impl.Log4jLoggerAdapter
              --initialize-at-build-time=jdk.xml.internal.SecuritySupport
              --initialize-at-run-time=io.netty.util.internal.logging.Slf4JLoggerFactory
              --initialize-at-run-time=io.netty.handler.ssl.BouncyCastleAlpnSslUtils
              --initialize-at-run-time=io.netty.handler.codec.compression.BrotliDecoder$1
              --initialize-at-run-time=io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine
              --initialize-at-run-time=io.netty.handler.ssl.OpenSslSessionContext
              --initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslContext
              --initialize-at-run-time=io.netty.channel.epoll.Epoll
              --initialize-at-run-time=io.netty.channel.epoll.Native
              --initialize-at-run-time=io.netty.channel.epoll.EpollEventLoop
              --initialize-at-run-time=io.netty.channel.epoll.EpollEventArray
              --initialize-at-run-time=io.netty.channel.DefaultFileRegion
              --initialize-at-run-time=io.netty.channel.kqueue.KQueueEventArray
              --initialize-at-run-time=io.netty.channel.kqueue.KQueueEventLoop
              --initialize-at-run-time=io.netty.channel.kqueue.Native
              --initialize-at-run-time=io.netty.channel.unix.Errors
              --initialize-at-run-time=io.netty.channel.unix.IovArray
              --initialize-at-run-time=io.netty.channel.unix.Limits
              --initialize-at-run-time=io.netty.util.internal.logging.Log4JLogger
              --initialize-at-run-time=io.netty.channel.unix.Socket
              --initialize-at-run-time=io.netty.channel.ChannelHandlerMask
            </buildArgs>
          </configuration>
        </plugin>
      </plugins>
    </build>
  </profile>
</profiles>
</project>
